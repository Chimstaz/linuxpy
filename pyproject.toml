[project]
name = "linuxpy"
description = "Human friendly interface to linux subsystems using python"
license = {text = "GPL-3.0-or-later"}
authors = [
    { name = "Jose Tiago Macara Coutinho", email = "coutinhotiago@gmail.com" }
]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Video",
    "Topic :: Multimedia :: Video :: Capture",
]
dependencies = []
dynamic = ["version", "readme"]

[project.urls]
Documentation = "https://github.com/tiagocoutinho/linuxpy"
Homepage = "https://github.com/tiagocoutinho/linuxpy"
Source = "https://github.com/tiagocoutinho/linuxpy"

[project.optional-dependencies]
build = [
    "build>=0.10.0",
    "twine>=4.0.2",
]
dev = [
    "black>=23.3.0",
    "build>=0.10.0",
    "ruff>=0.0.261",
    "twine>=4.0.2",
    "ward>=0.67.0b0",
    "ward-coverage>=0.3.0",
]
test = [ 
    "ward>=0.67.0b0",
    "ward-coverage>=0.3.0",
]
examples = [
    "flask>=2,<4",
    "fastapi<1",
    "opencv-python",
    "qtpy",
    "pyqt6",
    "gunicorn",
    "gevent",
    "uvicorn",
]

[build-system]
requires = ["setuptools >= 40.9.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["linuxpy"]

[tool.setuptools.dynamic]
version = {attr = "linuxpy.__version__"}
readme = {file = ["README.md"], content-type = "text/markdown"}

[tool.ward]
order = "standard"
fail-limit=10
path = ["tests"]
progress-style = ["inline"]
test_output_style = "test-per-line"
hook_module = ["ward_coverage"]
show-slowest = 3

[tool.ward.plugins.coverage]
report_type = ["term", "html"]
omit = ["*test*"]
report = {skip_empty = true}
branch = true

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191", # indentation contains tabs
]
line-length = 120
indent-width = 4
target-version = "py39"

[tool.ruff.isort]
combine-as-imports = true

[project.scripts]
linuxpy-codegen = "linuxpy.codegen.cli:main"